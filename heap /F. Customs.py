# Идёт 2163 год. Мишу, который работает в отделении таможни при космодроме города Нью-Питер, вызвал в кабинет шеф.

# Как оказалось, недавно Министерство Налогов и Сборов выделило отделению определённую сумму денег на установку новых аппаратов для автоматического досмотра грузов. 
# Естественно, средства были выделены с таким расчётом, чтобы грузы теперь находились на таможне ровно столько времени, сколько требуется непосредственно на их досмотр.

# В руках шефа каким-то образом оказались сведения о надвигающейся ревизии – список из N
#  грузов, которые будут контролироваться Министерством. Для каждого груза известны время его прибытия, отсчитываемое с некоторого момента, хранимого в большом секрете, и время, требуемое аппарату для обработки этого груза.
# Шеф дал Мише задание по этим данным определить, какое минимальное количество аппаратов необходимо заказать на заводе, чтобы все грузы Министерства начинали досматриваться сразу после прибытия. 
# Необходимо учесть, что конструкция тех аппаратов, которые было решено установить, не позволяет обрабатывать два груза одновременно на одном аппарате. Напишите программу, которая поможет Мише справиться с его задачей.

# Входные данные
# На первой строке входного файла задано число N
#  (0 ≤ N ≤ 50 000). На следующих N строках находится по 2 целых положительных числа Ti
#  и Li – время прибытия соответствующего груза и время, требуемое для его обработки (1 ≤ Ti ≤ 106, 1 ≤ Li≤ 106).

# Выходные данные
# В выходной файл выведите одно число – наименьшее количество аппаратов, которое нужно установить, чтобы не вызвать подозрений у Министерства.

import heapq
n = int(input())
arr = [[0, 0] for i in range(n)]
for i in range(n):
    t, l = map(int, input().split())
    arr[i][0] = t
    arr[i][1] = l

arr.sort()

heap = [arr[0][0] + arr[0][1]]
for i in range(1, n):
    if heap[0] <= arr[i][0]:
        heapq.heappop(heap)
    heapq.heappush(heap, arr[i][0]+ arr[i][1])

print(len(heap))
