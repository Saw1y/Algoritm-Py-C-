# Реализуйте структуру данных "стек". Напишите программу, содержащую описание стека и моделирующую работу стека, реализовав все указанные здесь методы. Программа считывает последовательность команд и в зависимости от команды выполняет ту или иную операцию. После выполнения каждой команды программа должна вывести одну строчку. Возможные команды для программы:

# push n
# Добавить в стек число n (значение n задается после команды). Программа должна вывести ok.
# pop
# Удалить из стека последний элемент. Программа должна вывести его значение.
# back
# Программа должна вывести значение последнего элемента, не удаляя его из стека.
# size
# Программа должна вывести количество элементов в стеке.
# clear
# Программа должна очистить стек и вывести ok.
# exit
# Программа должна вывести bye и завершить работу.
# Перед исполнением операций back и pop программа должна проверять, содержится ли в стеке хотя бы один элемент. Если во входных данных встречается операция back или pop, и при этом стек пуст, то программа должна вместо числового значения вывести строку error.
# Входные данные
# Вводятся команды управления стеком, по одной на строке

# Выходные данные
# Программа должна вывести протокол работы стека, по одному сообщению на строке

class Stack():
    def __init__(self):
        self.stack = []

    def push(self, n):
        self.stack.append(n)

    def pop(self):
        if self.size() == 0:
            return "error"
        else:
            return self.stack.pop()

    def back(self):
        if self.size() == 0:
            return "error"
        else:
            return self.stack[-1]

    def clear(self):
        self.stack = []

    def size(self):
        return len(self.stack)


st = Stack()
comand = input()
while comand != "exit":
    if comand == "pop":
        print(st.pop())
    elif comand == "back":
        print(st.back())
    elif comand == "size":
        print(st.size())
    elif comand == "clear":
        st.clear()
        print("ok")
    else:
        n = comand[4::]
        n = int(n)
        st.push(n)
        print("ok")
    comand = input()
print("bye")
