// Дана непустая строка, длина которой не превышает 106. 
//   Требуется для каждой позиции  символа в строке найти длину наибольшего палиндрома с центром в этом символе.
//   Строка состоит из букв английского алфавита, большие и маленькие буквы считаются различными. Ограничение времени - 1 секунда.

// Входные данные
// Одна строка длины N, 0 < N ≤ 106.

// Выходные данные
// N чисел, разделенные пробелами.

#include <iostream>
#include <string>
#include <vector>
using namespace std;

int main() {
    string ss;
    cin >> ss;

    string s = "#";
    for (char c : ss) {
        s += c;
        s += "#";
    }

    int n = s.size();
    vector<int> p(n, 0);
    int c = 0, r = 0;

    for (int i = 0; i < n; ++i) {
        if (i < r) {
            p[i] = min(p[2 * c - i], r - i);
        }
        while (i + p[i] + 1 < n && i - p[i] - 1 >= 0 && s[i + p[i] + 1] == s[i - p[i] - 1]) {
            ++p[i];
        }
        if (i + p[i] > r) {
            c = i;
            r = i + p[i];
        }
    }

    for (int i = 1; i < n; i += 2) {
        cout << p[i] << " ";
    }

    return 0;
}
